import { BrowserMultiFormatReader } from "@zxing/library";

const codeReader = new BrowserMultiFormatReader();

const getStream = async () => {
  try {
    return await navigator.mediaDevices.getUserMedia({
      video: { facingMode: { exact: "environment" } },
    });
  } catch (error) {
    return await navigator.mediaDevices.getUserMedia({ video: true });
  }
};

const getVideoConstraints = () => ({
  video: { facingMode: "environment" },
  audio: false,
});

const startScanner = async (videoRef, handleDecodeResult) => {
  try {
    const stream = await getStream();

    await codeReader.listVideoInputDevices();

    codeReader.decodeFromConstraints(
      getVideoConstraints(),
      videoRef.current,
      handleDecodeResult,
      { formats: ["QR_CODE", "CODE_128"] }
    );

    return stream;
  } catch (error) {
    console.error("Error starting scanner:", error);
    throw error;
  }
};

const stopStream = (stream) => {
  if (stream && stream.getTracks) {
    stream.getTracks().forEach((track) => track.stop());
  }
};

const resetScanner = () => {
  codeReader.reset();
};

export { startScanner, stopStream, resetScanner };